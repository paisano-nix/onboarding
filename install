#! /usr/bin/env bash
#
# A good old bash script to get you going with "${package}"
#

set -euo pipefail

owner="${OWNER:-paisano-nix}"
repo="${REPO:-tui}"
package="${PACKAGE:-paisano}"

NETRC="$(realpath ~/.netrc)"

{ # Prevent execution if this script was only partially downloaded

	log() {
		printf "\x1b[1;33m[%s installer]\x1b[0m %s\n" "${package}" "$*" >&2
	}

	setup_netrc() (
		log Set up netrc file for private repository access
		[[ -f "${NETRC}" ]] && log "Current contents:" && cat "${NETRC}"
		log Please enter your github user name:
		read -rp 'GH User(handle): ' ghuser
		log Please enter your github user name:
		read -rsp 'GH Private Access Token (https://github.com/settings/tokens/new with full "repo" scope): ' ghpat
		cat >>"${NETRC}" <<<"machine github.com login ${ghuser} password ${ghpat}"
		cat >>"${NETRC}" <<<"machine api.github.com login ${ghuser} password ${ghpat}"
		echo
		log "New contents:"
		cat "${NETRC}"
	)

	mkdir -p ~/.config/nix

	if ! command -v nix &>/dev/null; then
		log Nix not found - installing ...
		setup_netrc
		curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install
		# shellcheck source=/dev/null
		. '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
	fi

	if ! nix show-config | grep 'netrc-file' &>/dev/null; then
		setup_netrc
		cat >>~/.config/nix/nix.conf <<<"netrc-file = ${NETRC}"
		log Netrc file configured please validate ...
		log Config: "$(grep 'netrc-file' ~/.config/nix/nix.conf /dev/null)"
	fi

	if ! command -v direnv &>/dev/null; then
		log Direnv not found - installing ...
		log nix profile install "nixpkgs#direnv"
		nix profile install "nixpkgs#direnv"
	fi

	if ! command -v nom &>/dev/null; then
		log Nom not found - installing ...
		log nix profile install "nixpkgs#nix-output-monitor"
		nix profile install "nixpkgs#nix-output-monitor"
	fi

	# this package is potentially privae so only install after netrc is set up
	if ! command -v "${package}" &>/dev/null; then
		log "${package}" not found - installing ...
		log nix profile install --accept-flake-config "github:${owner}/${repo}#${package}"
		nix profile install --accept-flake-config "github:${owner}/${repo}#${package}"
	fi

	SHELLNAME="$(basename "${SHELL}")"

	case $SHELLNAME in
	bash)
		RC_CANDIDATE="${HOME}/.${SHELLNAME}rc"
		if [[ -f ${RC_CANDIDATE} ]]; then
			cp -n "${RC_CANDIDATE}" "${RC_CANDIDATE}.bak-before-${package}-installer"
			log Setting up shell hooks and reloading shell ...
			cat >>"${RC_CANDIDATE}" <<<"source <(${package} _carapace) # ${package}-installer"
			cat >>"${RC_CANDIDATE}" <<<"eval \"\$(direnv hook ${SHELLNAME})\" # ${package}-installer"
			tail -2 "${RC_CANDIDATE}"
			exec $SHELL
		fi
		echo
		;;
	oil)
		RC_CANDIDATE="${HOME}/.${SHELLNAME}rc"
		if [[ -f ${RC_CANDIDATE} ]]; then
			cp -n "${RC_CANDIDATE}" "${RC_CANDIDATE}.bak-before-${package}-installer"
			log Setting up shell hooks and reloading shell ...
			cat >>"${RC_CANDIDATE}" <<<"source <(${package} _carapace) # ${package}-installer"
			cat >>"${RC_CANDIDATE}" <<<"eval \"\$(direnv hook ${SHELLNAME})\" # ${package}-installer"
			tail -2 "${RC_CANDIDATE}"
			exec $SHELL
		fi
		;;
	zsh)
		RC_CANDIDATE="${HOME}/.${SHELLNAME}rc"
		if [[ -f ${RC_CANDIDATE} ]]; then
			cp -n "${RC_CANDIDATE}" "${RC_CANDIDATE}.bak-before-${package}-installer"
			log Setting up shell hooks and reloading shell ...
			cat >>"${RC_CANDIDATE}" <<<"source <(${package} _carapace) # ${package}-installer"
			cat >>"${RC_CANDIDATE}" <<<"eval \"\$(direnv hook ${SHELLNAME})\" # ${package}-installer"
			tail -2 "${RC_CANDIDATE}"
			exec $SHELL
		fi
		;;
	elvish)
		RC_CANDIDATE="${XDG_CONFIG_HOME:-${HOME}/.config}/elvish/rc.elv"
		if [[ -f ${RC_CANDIDATE} ]]; then
			cp -n "${RC_CANDIDATE}" "${RC_CANDIDATE}.bak-before-${package}-installer"
			log Setting up shell hooks and reloading shell ...
			cat >>"${RC_CANDIDATE}" <<<"eval (${package} _carapace | slurp) # ${package}-installer"
			cat >>"${RC_CANDIDATE}" <<<"eval \"\$(direnv hook ${SHELLNAME})\" # ${package}-installer"
			tail -2 "${RC_CANDIDATE}"
			exec $SHELL
		fi
		;;
	fish)
		RC_CANDIDATE="${XDG_CONFIG_HOME:-${HOME}/.config}/fish/config.fish"
		if [[ -f ${RC_CANDIDATE} ]]; then
			cp -n "${RC_CANDIDATE}" "${RC_CANDIDATE}.bak-before-${package}-installer"
			log Setting up shell hooks and reloading shell ...
			cat >>"${RC_CANDIDATE}" <<<"${package} _carapace | source # ${package}-installer"
			cat >>"${RC_CANDIDATE}" <<<"eval \"\$(direnv hook ${SHELLNAME})\" # ${package}-installer"
			tail -2 "${RC_CANDIDATE}"
			exec $SHELL
		fi
		;;
	esac
	log Please setup the following shell hooks:
	log "source <(${package} _carapace)"
	log "eval \"\$(direnv hook ${SHELLNAME})\""

} # fully downloaded
